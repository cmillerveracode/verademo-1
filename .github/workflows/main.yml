Name: Development Branch Workflow 

on:
  push:
    branches: [ development ]
  pull_request:
    branches: [ development ]


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a job to build and submit pipeline scan, you will need to customize the build process accordingly and make sure the artifact you build is used as the file input to the pipeline scan file parameter
  build-and-security-scan:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
    
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it, compiles with maven and copies the .war file for submitting for analysis. Replace this section with your applications build steps
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with: 
        java-version: 1.8
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
    - name: Build with Maven
      run: mvn clean package
          
    - uses: actions/upload-artifact@v1
      with:
        name: verademo.war
        path: target/verademo.war
    
    # download the Veracode Static Analysis Pipeline scan jar
    - uses: wei/curl@master
      with:
        args: -O https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip
    - run: unzip -o pipeline-scan-LATEST.zip
    
    # run the Veracode Pipeline scan
    - uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - run: java -jar pipeline-scan.jar --veracode_api_id "${{secrets.VERACODE_API_ID}}" --veracode_api_key "${{secrets.VERACODE_API_KEY}}" --fail_on_severity="Very High, High" --file target/verademo.war
      continue-on-error: true
    - uses: actions/upload-artifact@v1
      with:
        name: PipelineScanResults
        path: results.json
        
    # Convert Pipeline scan results to the SARFI format    
    - name: Convert pipeline scan output to SARIF format 
      id: convert
      uses: veracode/veracode-pipeline-scan-results-to-sarif@v0.1.5
      with:
        pipeline-results-json: results.json
        source-base-path-1: "^com/veracode:src/main/java/com/veracode"
        source-base-path-2: "^WEB-INF:src/main/webapp/WEB-INF"
    - uses: github/codeql-action/upload-sarif@v1
      with:
        # Path to SARIF file relative to the root of the repository
        sarif_file: veracode-results.sarif
        
    # Run a Software Composition Analysis scan
    - run: curl -sSL https://download.sourceclear.com/ci.sh | bash -s scan . --update-advisor 2>&1 | tee sca_output.txt
      env:
        SRCCLR_API_TOKEN: ${{secrets.SRCCLR_API_TOKEN}}
    - uses: actions/upload-artifact@v1
      with:
        name: SCAScanResults
        path: sca_output.txt
